<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Onikiri - Notes</title>
  
  
  <link href="/onikiri-blog/atom.xml" rel="self"/>
  
  <link href="https://onikiris.github.io/onikiri-blog/"/>
  <updated>2019-05-14T08:51:40.173Z</updated>
  <id>https://onikiris.github.io/onikiri-blog/</id>
  
  <author>
    <name>Onikiri</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>我有个超级无敌霹雳爆炸甜的恋爱想和你谈，你有兴趣吗？</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/10/16/%E6%88%91%E6%9C%89%E4%B8%AA%E8%B6%85%E7%BA%A7%E6%97%A0%E6%95%8C%E9%9C%B9%E9%9B%B3%E7%88%86%E7%82%B8%E7%94%9C%E7%9A%84%E6%81%8B%E7%88%B1%E6%83%B3%E5%92%8C%E4%BD%A0%E8%B0%88%EF%BC%8C%E4%BD%A0%E6%9C%89%E5%85%B4%E8%B6%A3%E5%90%97%EF%BC%9F/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/10/16/我有个超级无敌霹雳爆炸甜的恋爱想和你谈，你有兴趣吗？/</id>
    <published>2018-10-15T16:00:00.000Z</published>
    <updated>2019-05-14T08:51:40.173Z</updated>
    
    <content type="html"><![CDATA[<p><strong><center><font color="hotpink">动人心者，莫先乎与情</font></center></strong></p><h3 id="重要的事写前面"><a href="#重要的事写前面" class="headerlink" title="重要的事写前面"></a><font>重要的事写前面</font></h3><p><strong> 1.喜欢猫猫<br>   2.喜欢芒果<br>   3.大江山鬼王的女人，不能惹<br>   4.吃零食不会胖，可以放心投喂<br>   5.喜欢小姐姐，一直感觉自己地位不保<br>   6.生日？？？什么时候，忘了， 记不起来了 <del><font size="0.5px">10.12</font></del><br>   7….</strong><br><a id="more"></a></p><h3 id="日常聊天"><a href="#日常聊天" class="headerlink" title="日常聊天"></a>日常聊天</h3><p><del><strong>事实上</strong></del><br><del><strong>就是个嘤嘤怪</strong></del><br><strong>怂，我知道了，嘤嘤嘤是我惯的，是我惯的</strong></p><p>有时候电话聊天会有撒娇的语气，哇，简直不能忍，就想在她边上抱着她<br>嗯，喜欢听她刚睡醒的时候讲话迷迷糊糊软软的声音，想微微一硬以示尊敬 233333（记住这是我喜欢的）</p><h3 id="是个情话机（还没想好怎么写，先酱紫）"><a href="#是个情话机（还没想好怎么写，先酱紫）" class="headerlink" title="是个情话机（还没想好怎么写，先酱紫）"></a>是个情话机（还没想好怎么写，先酱紫）</h3><p>关于喜欢表白，我还是很喜欢听的（小声哔哔：好听的话能不喜欢听嘛）<br>就是情话有点多啊，应该…是书读的多（不是撩小姐姐练出来的，不可能的，我不听），毕竟母胎solo那么多年的</p><h3 id="我喜欢的"><a href="#我喜欢的" class="headerlink" title="我喜欢的"></a>我喜欢的</h3><p>你猜啊，有本事你猜啊~    </p><h3 id="关于游戏"><a href="#关于游戏" class="headerlink" title="关于游戏"></a>关于游戏</h3><h4 id="痒痒鼠两秃驴养成ing（阴阳师）"><a href="#痒痒鼠两秃驴养成ing（阴阳师）" class="headerlink" title="痒痒鼠两秃驴养成ing（阴阳师）"></a>痒痒鼠两秃驴养成ing（阴阳师）</h4><p>这个必须说，原本我是不玩的，奈何人是个磨人的小妖精，玩了游戏之后发现，嗯，她还差点火候，还不够磨人<br>一开始是因为没有出式神不想玩，后来换了一下区重新玩，从此开始沉迷，头顶日渐觉凉<br>她是入坑年龄比较大的秃子老玩家了<br>这玩意比较伤肝，感觉身体一天不如一天，还好不氪金，不然会以为在吸毒<br>蜜汁喜欢跟我切磋，可是我都是日常被按在地板上打啊喂~<br>（立个flag，我要是哪天被打哭了，删号去）</p><h4 id="平安京的塘主（决战，平安京）"><a href="#平安京的塘主（决战，平安京）" class="headerlink" title="平安京的塘主（决战，平安京）"></a>平安京的塘主（决战，平安京）</h4><p>怎么说，这个游戏算是一个契机，毕竟就靠这个游戏和她混熟的，游戏开启一段网恋的既视感 23333<br>玩游戏方面，碰到的玩的好女生其实不多，就觉得她在游戏上有一定的天赋，玩的挺好的<br>上分的时候会去玩玩大号，然鹅日常结果就是掉分，只能开小号去寻求快乐  表示技术不行，带不动她，还得靠她带飞 23333<br>真·男朋友玩游戏不如女朋友系列~<br> [<font size="5px"> 超级有脾气 我不菜，是手机卡！！！！</font>] 嘤嘤嘤~<br>（我不是，我没有，别瞎说）</p><h3 id="我就是个祖宗弟弟（大声哔哔：祖宗明明是你）"><a href="#我就是个祖宗弟弟（大声哔哔：祖宗明明是你）" class="headerlink" title="我就是个祖宗弟弟（大声哔哔：祖宗明明是你）"></a>我就是个<del><font size="1px">祖宗</font></del>弟弟（大声哔哔：祖宗明明是你）</h3><p>我一般都叫她猫猫的，我喜欢猫，感觉她和猫猫就很像，反正也想养猫，只是没条件不好养，就养她好了<br>她喊我祖宗，表示我一点都没有…（还有喊爸爸，哥哥什么的，我都没这种心理诉求！！！）<br>心理诉求：想被喊老公呀，你懂吗？<br>谁家祖宗会去顺毛的….</p><h3 id="我们的开始"><a href="#我们的开始" class="headerlink" title="我们的开始"></a>我们的开始</h3><blockquote><p><strong>问：我有个超级无敌霹雳爆炸甜的恋爱想和你谈，你有兴趣吗？</strong><br><strong>答：对不起，我有兴趣</strong></p></blockquote><font size="0.5px">（被表白什么感觉：巨爽！！！！哈哈哈哈哈）</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;center&gt;&lt;font color=&quot;hotpink&quot;&gt;动人心者，莫先乎与情&lt;/font&gt;&lt;/center&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;重要的事写前面&quot;&gt;&lt;a href=&quot;#重要的事写前面&quot; class=&quot;headerlink&quot; title=&quot;重要的事写前面&quot;&gt;&lt;/a&gt;&lt;font&gt;重要的事写前面&lt;/font&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt; 1.喜欢猫猫&lt;br&gt;   2.喜欢芒果&lt;br&gt;   3.大江山鬼王的女人，不能惹&lt;br&gt;   4.吃零食不会胖，可以放心投喂&lt;br&gt;   5.喜欢小姐姐，一直感觉自己地位不保&lt;br&gt;   6.生日？？？什么时候，忘了， 记不起来了 &lt;del&gt;&lt;font size=&quot;0.5px&quot;&gt;10.12&lt;/font&gt;&lt;/del&gt;&lt;br&gt;   7….
&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="情话连篇" scheme="https://onikiris.github.io/onikiri-blog/categories/%E6%83%85%E8%AF%9D%E8%BF%9E%E7%AF%87/"/>
    
    
      <category term="情不知所起" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%83%85%E4%B8%8D%E7%9F%A5%E6%89%80%E8%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>此生无悔入夏目，来世愿做账中妖</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/06/25/%E6%AD%A4%E7%94%9F%E6%97%A0%E6%82%94%E5%85%A5%E5%A4%8F%E7%9B%AE%EF%BC%8C%E6%9D%A5%E4%B8%96%E6%84%BF%E5%81%9A%E8%B4%A6%E4%B8%AD%E5%A6%96/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/06/25/此生无悔入夏目，来世愿做账中妖/</id>
    <published>2018-06-25T08:17:25.000Z</published>
    <updated>2019-05-14T02:45:14.329Z</updated>
    
    <content type="html"><![CDATA[<p>最近在和一个女孩子闲聊时，她推荐了一部动漫 — 《夏目友人帐》，从她那得知是治愈系列，是没多少兴趣的。但也因无事就看了一集，发觉其实还不错，可能之前没有看过这个类型的，忽然对此产生了念头 — 我想看，并且记下<a id="more"></a></p><h4 id="原来是孤独啊"><a href="#原来是孤独啊" class="headerlink" title="原来是孤独啊"></a>原来是孤独啊</h4><p>从一开始就明白这是一个关于孤独的故事，原以为孤独应该是触发人心底的怨或恨，可夏目却是一个非常善良的温柔的对弱小者或是对非同类都有同情心慈悲心的男孩。可能因为自己一直被当作异类，所以可以去理解到他能够看到的“妖怪” — 异类。</p><p>也许妖怪因为漫长的生命而感到孤独，某一刻因为人看见了它们，或是遇到了它们，亦或是给了它们一次温柔的对待，都会让妖怪特别留恋。</p><p>夏目不同于他的祖母玲子，玲子一直都是一个人。夏目从其他人口中知道的玲子是另一种孤独，是被世人所遗弃的，不认可的，可是他却从妖怪那里知道玲子是经常会笑的，她和妖怪的羁绊是常人永远不懂的。</p><p>玲子的孤独让她和妖怪玩游戏，收集她遇到的妖怪的名字来建立羁绊，也因此她不孤独，她随时可以召唤那么多的妖怪。</p><p>夏目身边有能看到妖怪除妖师，有陪着他猫老师，有真正爱他关心他的塔子阿姨和滋叔叔。他不是一直只是一个人，我想他的孤独是小时候不被理解的别人口中的谎话，是辗转寄宿于不同的亲人之间的不被温暖。</p><h4 id="小狐狸的帽子"><a href="#小狐狸的帽子" class="headerlink" title="小狐狸的帽子"></a>小狐狸的帽子</h4><p>我想第一季里最为触动我的就是小狐狸的帽子，这是两个孤独孩子的故事</p><p>小狐狸不知什么时候没有了妈妈一个人在森林林里生活，常常被其他妖怪欺负。夏目很小的时候，父母就不在了，寄住在亲戚家，常常被亲戚嫌弃，又总被妖怪捉弄。</p><p>小狐狸似乎已经习惯了被欺负，所以不曾有反抗。夏目的出手相救，让小狐狸很感动。虽然他当时立刻躲进草丛中，但是后来还是忍不住偷偷的跟踪夏目。</p><p>小狐狸常常觉得孤单，夏目小时候也是如此。<br>小狐狸总是被其他妖怪嘲笑是废物，夏目也有类似的经历。所以在滋叔叔拜托夏目帮忙时，夏目特别开心。当夏目对小狐狸说谢谢时，小狐狸也特别开心。感觉自己也是个有用的妖怪，而不再是个废物，一定是很好的心情。</p><p>当小狐狸在人类的世界里跌跌撞终于找到夏目时，他在木门边拉着一条缝隙偷偷的看，却看到他开心的和家人一起吃饭。</p><blockquote><p>原来他一直都很开心，一点都不孤单，孤单的只是我自己。</p></blockquote><p>小狐狸的内心独白，真的揉碎了我的心。</p><p>小狐狸幻想过夏目可能也是个幻化成人类的妖怪，和自己一样，那么夏目就可以和自己一起生活在森林里。可惜，夏目是人类，不是妖怪。<br>如果夏目也像自己一样孤单、不快乐，那么自己的到来一定会让夏目不再那么孤单。可惜，夏目很开心，身边也有人陪伴。<br>夏目总是笑着，感觉不真实。或许夏目就是如此，是真的很开心，和自己完全不一样吧。小狐狸不想想太多，只想急忙的离开，离开只是为了逃避，逃避无法承担的事实。</p><p>当小狐狸扑入夏目怀里的那一刻，我想他们彼此都在温暖</p><h4 id="心色的车票"><a href="#心色的车票" class="headerlink" title="心色的车票"></a>心色的车票</h4><p>夏目翻出玲子遗物发现有一张车票，乘车之后遇见妖怪三都。<br>笨笨的三都一直在等玲子带他去找生气了的三栗，玲子未能守约，他只是傻傻的等着，一直一直坐在车站的长崎，几十年就那么过去。<br>猫老师：“三都，玲子没来的话，你一个人去不也可以吗？为什么要一直等呢？”<br>三都：“那个，因为我们约好了的。”<br>在烈日下等待的三都。抱着夏目转圈圈的三都。听到夏目同意今天一起去找三栗开心的三都。被打也不屈服的三都。跳着扑向三栗的三都。不停的开心道歉的三都。泪水不由地就流下来。</p><p>那样一个憨憨的大熊，那样一个容易出现两团害羞红红的大熊，那样一个思维简单容易慌乱的大熊，他没有很多妖怪的威胁力，他没有野心，甚至没有显示出一点法力的样子。他只是慢慢的踱着，笨笨的可爱的蹲下摘路边的小野果。</p><p>就是这样的三都在夏目和猫老师处于困境的时候，为了他们被最爱的朋友抽打也不肯交出友人帐，只因为“这是玲子的”。他只是用自己的方式保护朋友，守护约定，呼唤最爱的人清醒过来。</p><h4 id="你我都曾被温暖过"><a href="#你我都曾被温暖过" class="headerlink" title="你我都曾被温暖过"></a>你我都曾被温暖过</h4><p>夏目是一个温柔的少年，对待任何事物都一样。也许是因为这种的单纯，所以夏目经常被妖怪骗取信任，也因此经常陷入危险之中，然而这个时候猫老师总是会第一时间的出现，结尾的时候两个人总是会边打边闹的一起回家，他们都被彼此温暖着呢</p><h4 id="不可避免的喜欢猫"><a href="#不可避免的喜欢猫" class="headerlink" title="不可避免的喜欢猫"></a>不可避免的喜欢猫</h4><p>最喜欢果然是猫老师，只是他出场的那一刻内心还是很意外的，还真有猫可以胖成球似的，自然而然的被萌到了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在和一个女孩子闲聊时，她推荐了一部动漫 — 《夏目友人帐》，从她那得知是治愈系列，是没多少兴趣的。但也因无事就看了一集，发觉其实还不错，可能之前没有看过这个类型的，忽然对此产生了念头 — 我想看，并且记下
    
    </summary>
    
      <category term="故事和酒" scheme="https://onikiris.github.io/onikiri-blog/categories/%E6%95%85%E4%BA%8B%E5%92%8C%E9%85%92/"/>
    
    
      <category term="情不知所起" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%83%85%E4%B8%8D%E7%9F%A5%E6%89%80%E8%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu上搭建Maven私服</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/05/01/Ubuntu%E4%B8%8A%E6%90%AD%E5%BB%BAMaven%E7%A7%81%E6%9C%8D/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/05/01/Ubuntu上搭建Maven私服/</id>
    <published>2018-05-01T12:46:25.000Z</published>
    <updated>2019-05-14T02:45:14.325Z</updated>
    
    <content type="html"><![CDATA[<p>关于为嘛要搭建Maven私服，套用大部分人的说法：<br>有些公司都不提供外网给项目组人员，因此就不能使用maven访问远程的仓库地址，所以很有必要在局域网里找一台有外网权限的机器，搭建nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了nexus私服的电脑访问maven的远程仓库。</p><p>下载Nexus开源版本，免费：<a href="https://www.sonatype.com/nexus-repository-oss" target="_blank" rel="noopener">Nexus Repository OSS</a></p><h4 id="检查Java是否已经安装"><a href="#检查Java是否已经安装" class="headerlink" title="检查Java是否已经安装"></a>检查Java是否已经安装</h4><p>nexus虽然只需要jre环境支持，但是方便以后的环境需要，所以直接配置好jdk环境<br><a id="more"></a></p><p>终端上输入一下命令：<br><code>$ java -version</code></p><p>如果出现以下内容证明没有安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@vengao:~# java -version</span><br><span class="line"> The program &apos;java&apos; can be found in the following packages:</span><br><span class="line"> * default-jre</span><br><span class="line"> * gcj-5-jre-headless</span><br><span class="line"> * openjdk-8-jre-headless</span><br><span class="line"> * gcj-4.8-jre-headless</span><br><span class="line"> * gcj-4.9-jre-headless</span><br><span class="line"> * openjdk-9-jre-headless</span><br><span class="line">Try: apt install &lt;selected package&gt;</span><br></pre></td></tr></table></figure></p><p>附：<a href="https://visuper.cn/visuper-blog/2018/04/16/Ubuntu安装JDK8和Tomcat/" target="_blank" rel="noopener">Jdk安装教程</a></p><h4 id="检查Maven是否安装"><a href="#检查Maven是否安装" class="headerlink" title="检查Maven是否安装"></a>检查Maven是否安装</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ mvn --version</span><br><span class="line">  Apache Maven 3.3.9</span><br><span class="line">  Maven home: /usr/share/maven</span><br><span class="line">  Java version: 1.8.0_151, vendor: Oracle Corporation</span><br><span class="line">  Java home: /usr/lib/jvm/java-8-oracle/jre</span><br><span class="line">  Default locale: en_US, platform encoding: ANSI_X3.4-1968</span><br><span class="line">  OS name: &quot;linux&quot;, version: &quot;2.6.32-042stab127.2&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure><p>我的目前是安装了Maven的，但是官网推荐使用3.52版本，所以还是继续安装<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install maven</span><br></pre></td></tr></table></figure></p><p>emmmm，再次检查版本，结果很不幸，这种安装并没有覆盖Ubuntu自带的Maven，进入<code>/usr/local/src</code> 目录下，获取maven安装文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cd /usr/local/src</span><br><span class="line">$ sudo wget http://www-us.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz</span><br></pre></td></tr></table></figure></p><p>提取maven.tar.gz文件，然后删除压缩文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tar -xf apache-maven-3.5.2-bin.tar.gz</span><br><span class="line">$ sudo rm -f apache-maven-3.5.2-bin.tar.gz</span><br></pre></td></tr></table></figure></p><p>你会得到新的目录apache-maven-3.5.2</p><h4 id="配置Maven环境变量"><a href="#配置Maven环境变量" class="headerlink" title="配置Maven环境变量"></a>配置Maven环境变量</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /etc/profile.d/ </span><br><span class="line">$ sudo vi maven.sh</span><br></pre></td></tr></table></figure><p>粘贴以下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/java-8-oracle</span><br><span class="line">export M2_HOME=/usr/local/src/apache-maven-3.5.2</span><br><span class="line">export MAVEN_HOME=/usr/local/src/apache-maven-3.5.2</span><br><span class="line">export PATH=$&#123;M2_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure></p><p> 现在让<code>maven.sh</code>脚本可执行，然后通过运行<code>source</code>命令来应用配置<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod +x maven.sh</span><br><span class="line">$ source maven.sh</span><br></pre></td></tr></table></figure></p><p> 再次检查版本<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ mvn --version</span><br><span class="line">  Apache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T15:58:13+08:00)</span><br><span class="line">  Maven home: /usr/local/src/apache-maven-3.5.2</span><br><span class="line">  Java home: /usr/lib/jvm/java-8-oracle/jre</span><br><span class="line">  Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">  OS name: &quot;linux&quot;, version: &quot;4.4.0-105-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于为嘛要搭建Maven私服，套用大部分人的说法：&lt;br&gt;有些公司都不提供外网给项目组人员，因此就不能使用maven访问远程的仓库地址，所以很有必要在局域网里找一台有外网权限的机器，搭建nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了nexus私服的电脑访问maven的远程仓库。&lt;/p&gt;
&lt;p&gt;下载Nexus开源版本，免费：&lt;a href=&quot;https://www.sonatype.com/nexus-repository-oss&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nexus Repository OSS&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;检查Java是否已经安装&quot;&gt;&lt;a href=&quot;#检查Java是否已经安装&quot; class=&quot;headerlink&quot; title=&quot;检查Java是否已经安装&quot;&gt;&lt;/a&gt;检查Java是否已经安装&lt;/h4&gt;&lt;p&gt;nexus虽然只需要jre环境支持，但是方便以后的环境需要，所以直接配置好jdk环境&lt;br&gt;
    
    </summary>
    
      <category term="聚沙成塔" scheme="https://onikiris.github.io/onikiri-blog/categories/%E8%81%9A%E6%B2%99%E6%88%90%E5%A1%94/"/>
    
    
      <category term="潜龙在渊" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%BD%9C%E9%BE%99%E5%9C%A8%E6%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装JDK和Tomcat</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/04/16/Ubuntu%E5%AE%89%E8%A3%85JDK8%E5%92%8CTomcat/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/04/16/Ubuntu安装JDK8和Tomcat/</id>
    <published>2018-04-16T12:53:25.000Z</published>
    <updated>2019-05-14T02:45:14.325Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Java-Development-Kit安装："><a href="#Java-Development-Kit安装：" class="headerlink" title="Java Development Kit安装："></a>Java Development Kit安装：</h4><p>安装的jdk有很多选择，我选择的是Oracle JDK，通过ppa源方式安装，源方式可以通过 apt-get upgrade 方式方便获得jdk的升级</p><h5 id="添加ppa"><a href="#添加ppa" class="headerlink" title="添加ppa"></a>添加ppa</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:webupd8team/java</span><br></pre></td></tr></table></figure><p>当我执行这条命令的时候出现了问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi@vengao:/root$ sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">The program &apos;add-apt-repository&apos; is currently not installed. You can install it by typing:</span><br><span class="line">apt install software-properties-common</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>按照提示执行后解决问题：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install software-properties-common</span><br><span class="line">$ sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure></p><h5 id="安装oracle-java-installer"><a href="#安装oracle-java-installer" class="headerlink" title="安装oracle-java-installer"></a>安装oracle-java-installer</h5><h5 id="JDK8"><a href="#JDK8" class="headerlink" title="JDK8"></a>JDK8</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install oracle-java8-installer</span><br></pre></td></tr></table></figure><h5 id="JDK7"><a href="#JDK7" class="headerlink" title="JDK7"></a>JDK7</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install oracle-java7-installer</span><br></pre></td></tr></table></figure><p>安装器会提示你同意 oracle 的服务条款，选择 ok，选择yes ,然后坐等下载</p><h5 id="设置系统默认jdk"><a href="#设置系统默认jdk" class="headerlink" title="设置系统默认jdk"></a>设置系统默认jdk</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-java-alternatives -s java-8-oracle</span><br></pre></td></tr></table></figure><h5 id="检查版本信息"><a href="#检查版本信息" class="headerlink" title="检查版本信息"></a>检查版本信息</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi@vengao:/root$ java -version</span><br><span class="line">java version &quot;1.8.0_161&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_161-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)</span><br></pre></td></tr></table></figure><h4 id="Tomcat安装："><a href="#Tomcat安装：" class="headerlink" title="Tomcat安装："></a>Tomcat安装：</h4><h5 id="创建tomcat用户"><a href="#创建tomcat用户" class="headerlink" title="创建tomcat用户"></a>创建tomcat用户</h5><p>创建一个新tomcat组：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd tomcat</span><br></pre></td></tr></table></figure></p><p>接下来，创建一个新<code>tomcat</code>用户。我们将使该用户成为该<code>tomcat</code>组的成员，并具有一个主目录<code>/opt/tomcat</code>（我们将在其中安装Tomcat）以及一个<code>/bin/false</code>（没有人可以登录该帐户）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat</span><br></pre></td></tr></table></figure></p><h5 id="tomcat下载"><a href="#tomcat下载" class="headerlink" title="tomcat下载"></a>tomcat下载</h5><p>tomcat就不选择源方式安装了，从官网上查找下载：在 8.5.30-&gt;Binary Distributions-&gt;Core 分类中的 tar.gz包</p><p>链接：<a href="http://tomcat.apache.org/download-80.cgi#8.5.30" target="_blank" rel="noopener">apache-tomcat-8.5.30</a></p><p>懒得在网页上去下载，使用curl下载<br>切换到/tmp服务器上的目录。这个目录来一般用于下载临时文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /tmp</span><br><span class="line">$ curl -O http://apache.mirrors.ionfish.org/tomcat/tomcat-8/v8.5.30/bin/apache-tomcat-8.5.30.tar.gz</span><br></pre></td></tr></table></figure></p><p>等待下载完毕即可<br>将Tomcat安装到/opt/tomcat目录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir /opt/tomcat</span><br><span class="line">$ sudo tar xzvf apache-tomcat-8.5.30.tar.gz -C /opt/tomcat --strip-components=1</span><br></pre></td></tr></table></figure></p><h5 id="更新权限"><a href="#更新权限" class="headerlink" title="更新权限"></a>更新权限</h5><p>切换到解压Tomcat安装的目录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd /opt/tomcat</span><br></pre></td></tr></table></figure></p><p>给tomcat整个安装目录组的所有权：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chgrp -R tomcat /opt/tomcat</span><br></pre></td></tr></table></figure></p><p>接下来，让该tomcat组读取对该conf目录及其所有内容的访问权限，并执行对该目录本身的访问：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chmod -R g+r conf</span><br><span class="line">$ sudo chmod g+x conf</span><br></pre></td></tr></table></figure></p><p>让tomcat用户获取以下目录权限 webapps，work，temp，logs：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R tomcat webapps/ work/ temp/ logs/</span><br></pre></td></tr></table></figure></p><h5 id="创建一个systemd服务文件"><a href="#创建一个systemd服务文件" class="headerlink" title="创建一个systemd服务文件"></a>创建一个systemd服务文件</h5><p>将Tomcat作为服务运行，配置systemd服务文件。<br>Tomcat需要知道Java的安装位置，也就是<code>JAVA_HOME</code>，查找该位置的最简单方法是运行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo update-java-alternatives -l</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java-8-oracle                  1081       /usr/lib/jvm/java-8-oracle</span><br></pre></td></tr></table></figure><p>正确的<code>JAVA_HOME</code> 变量可以通过从最后一列输出追加<code>/jre</code>到末尾来构造<br>所以<code>JAVA_HOME</code>的配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/jvm/java-8-oracle/jre</span><br></pre></td></tr></table></figure></p><p>备注：你的<code>JAVA_HOME</code>可能不一样</p><p>创建systemd服务文件，打开目录中调用的文件/etc/systemd/system，输入以下命令创建tomcat.service：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/systemd/system/tomcat.service</span><br></pre></td></tr></table></figure></p><p>输入以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Apache Tomcat Web Application Container</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line"></span><br><span class="line">Environment=JAVA_HOME=/usr/lib/jvm/java-8-oracle/jre</span><br><span class="line">Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid</span><br><span class="line">Environment=CATALINA_HOME=/opt/tomcat</span><br><span class="line">Environment=CATALINA_BASE=/opt/tomcat</span><br><span class="line">Environment=&apos;CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC&apos;</span><br><span class="line">Environment=&apos;JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom&apos;</span><br><span class="line"></span><br><span class="line">ExecStart=/opt/tomcat/bin/startup.sh</span><br><span class="line">ExecStop=/opt/tomcat/bin/shutdown.sh</span><br><span class="line"></span><br><span class="line">User=tomcat</span><br><span class="line">Group=tomcat</span><br><span class="line">UMask=0007</span><br><span class="line">RestartSec=10</span><br><span class="line">Restart=always</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></p><p>接下来，重新加载systemd守护进程，刷新服务文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure></p><p>输入以下命令启动Tomcat服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl start tomcat</span><br></pre></td></tr></table></figure></p><p>输入以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl status tomcat</span><br></pre></td></tr></table></figure></p><p>会出现类似内容即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">tomcat.service - Apache Tomcat Web Application Container</span><br><span class="line">   Loaded: loaded (/etc/systemd/system/tomcat.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Thu 2018-04-26 15:53:35 CST; 9s ago</span><br><span class="line">   Process: 23303 ExecStart=/opt/tomcat/bin/startup.sh (code=exited, status=0/SUCCESS)</span><br><span class="line">   Main PID: 23313 (java)</span><br><span class="line">   CGroup: /system.slice/tomcat.service</span><br><span class="line">           └─23313 /usr/lib/jvm/java-8-oracle/jre/bin/java -Djava.util.logging.config.file=/opt/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apa</span><br><span class="line"></span><br><span class="line">Apr 26 15:53:35 vengao systemd[1]: Starting Apache Tomcat Web Application Container...</span><br><span class="line">Apr 26 15:53:35 vengao systemd[1]: Started Apache Tomcat Web Application Container.</span><br></pre></td></tr></table></figure></p><h5 id="调整防火墙并测试Tomcat服务器"><a href="#调整防火墙并测试Tomcat服务器" class="headerlink" title="调整防火墙并测试Tomcat服务器"></a>调整防火墙并测试Tomcat服务器</h5><p>Tomcat默认使用端口8080来接受传统的请求。通过输入以下内容允许通信到该端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ufw allow 8080</span><br></pre></td></tr></table></figure></p><p>通过 <code>ip_url:8080</code> 访问Tomcat 例如：<code>localhost:8080</code></p><p>如果能够成功访问Tomcat，创建Tomcat在虚拟机上的开机启动文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl enable tomcat</span><br></pre></td></tr></table></figure></p><p>出现以下内容表示设置成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/tomcat.service to /etc/systemd/system/tomcat.service.</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Java-Development-Kit安装：&quot;&gt;&lt;a href=&quot;#Java-Development-Kit安装：&quot; class=&quot;headerlink&quot; title=&quot;Java Development Kit安装：&quot;&gt;&lt;/a&gt;Java Development Kit安装：&lt;/h4&gt;&lt;p&gt;安装的jdk有很多选择，我选择的是Oracle JDK，通过ppa源方式安装，源方式可以通过 apt-get upgrade 方式方便获得jdk的升级&lt;/p&gt;
&lt;h5 id=&quot;添加ppa&quot;&gt;&lt;a href=&quot;#添加ppa&quot; class=&quot;headerlink&quot; title=&quot;添加ppa&quot;&gt;&lt;/a&gt;添加ppa&lt;/h5&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo add-apt-repository ppa:webupd8team/java&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当我执行这条命令的时候出现了问题&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;vi@vengao:/root$ sudo add-apt-repository ppa:webupd8team/java&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The program &amp;apos;add-apt-repository&amp;apos; is currently not installed. You can install it by typing:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install software-properties-common&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="聚沙成塔" scheme="https://onikiris.github.io/onikiri-blog/categories/%E8%81%9A%E6%B2%99%E6%88%90%E5%A1%94/"/>
    
    
      <category term="潜龙在渊" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%BD%9C%E9%BE%99%E5%9C%A8%E6%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>IDEA设置DashBoard</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/03/31/IDEA%E8%AE%BE%E7%BD%AEDashBoard/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/03/31/IDEA设置DashBoard/</id>
    <published>2018-03-31T12:46:25.000Z</published>
    <updated>2019-05-14T02:45:14.324Z</updated>
    
    <content type="html"><![CDATA[<p>最近学习SpringBoot时，运行时要用到DashBoard这个功能，使用的是IDEA，找了半天没找到，花了点时间看了下IDEA的帮助文档，文档果然是个好东西，分分钟解决<a id="more"></a><br>文档上有一段话关于DashBoard：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">To enable the dashboard:</span><br><span class="line">1.Click Edit Configurations from the run/debug configurations selector.</span><br><span class="line">2.Select Defaults from the list in the left-hand section.</span><br><span class="line">3.Under the Run Dashboard Types section, click   and select the necessary run configuration type. You can add multiple configuration types one by one.</span><br><span class="line">4.Apply the changes and close the dialog.</span><br></pre></td></tr></table></figure></p><p>翻译如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启用仪表板：</span><br><span class="line">1. 点击运行/调试配置选择器中的编辑配置</span><br><span class="line">2. 选择默认在左边的部分从列表</span><br><span class="line">3. 运行仪表类型 栏目下，点击 和选择必要的运行配置类型。可以一个接一个地添加多种配置类型</span><br><span class="line">4. 应用更改并关闭对话框</span><br></pre></td></tr></table></figure></p><ol><li>工具栏上选择Run</li><li>选择Edit Configurations</li><li>选择左边列表Defaults</li><li>右边下半部有一个Run DashBoard Type是折叠的，单击展开，单击加号选择需要运行的项目类型<br>因为我用的是SpringBoot，所以选择SpringBoot，应用之后，视图窗口会出现Run DashBoard的选项</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近学习SpringBoot时，运行时要用到DashBoard这个功能，使用的是IDEA，找了半天没找到，花了点时间看了下IDEA的帮助文档，文档果然是个好东西，分分钟解决
    
    </summary>
    
      <category term="小试牛刀" scheme="https://onikiris.github.io/onikiri-blog/categories/%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    
    
      <category term="路漫漫兮" scheme="https://onikiris.github.io/onikiri-blog/tags/%E8%B7%AF%E6%BC%AB%E6%BC%AB%E5%85%AE/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的图片服务器之旅—Ubuntu篇</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/01/16/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E6%97%85%E4%B9%8BUbuntu%E7%AF%87/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/01/16/从零开始的图片服务器之旅之Ubuntu篇/</id>
    <published>2018-01-16T12:46:25.000Z</published>
    <updated>2019-05-14T02:45:14.327Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure><h4 id="在home目录下创建静态资源文件夹images"><a href="#在home目录下创建静态资源文件夹images" class="headerlink" title="在home目录下创建静态资源文件夹images"></a>在home目录下创建静态资源文件夹images</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir -p /home/ftpuser/www/images</span><br></pre></td></tr></table></figure><h4 id="在ftpuser目录下新建用户"><a href="#在ftpuser目录下新建用户" class="headerlink" title="在ftpuser目录下新建用户"></a>在ftpuser目录下新建用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo useradd -d /home/ftpuser -s /bin/bash ftpuser</span><br></pre></td></tr></table></figure><h4 id="设置ftpuser用户密码"><a href="#设置ftpuser用户密码" class="headerlink" title="设置ftpuser用户密码"></a>设置ftpuser用户密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd ftpuser</span><br></pre></td></tr></table></figure><h3 id="FTP相关命令"><a href="#FTP相关命令" class="headerlink" title="FTP相关命令"></a>FTP相关命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#启动ftp服务</span><br><span class="line">$ sudo service vsftpd start</span><br><span class="line"># 查看ftp服务状态</span><br><span class="line">$ sudo service vsftpd status </span><br><span class="line"># 重启ftp服务</span><br><span class="line">$ sudo service vsftpd restart</span><br><span class="line"># 关闭ftp服务</span><br><span class="line">$ sudo service vsftpd stop</span><br></pre></td></tr></table></figure><p>在虚拟机浏览器中输入ftp://本机ip地址或localhost，回车后会弹出输入框，根据提示输入用户名和密码<br>备注：我的用户名是：ftpuser，密码是自己设置的</p><h4 id="修改vsftpd-conf配置文件"><a href="#修改vsftpd-conf配置文件" class="headerlink" title="修改vsftpd.conf配置文件"></a>修改vsftpd.conf配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/vsftpd.conf</span><br><span class="line">匿名登陆，注释掉或者改为NO</span><br><span class="line">#anonymous_enable=YES</span><br><span class="line">允许本地用户登陆</span><br><span class="line">local_enable=YES</span><br><span class="line">可写,注意删除#</span><br><span class="line">write_enable=YES</span><br></pre></td></tr></table></figure><h4 id="更改文件夹读写权限"><a href="#更改文件夹读写权限" class="headerlink" title="更改文件夹读写权限"></a>更改文件夹读写权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R  ftpuser /home/ftpuser</span><br></pre></td></tr></table></figure><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ufw disable</span><br></pre></td></tr></table></figure><p>使用工具进行文件上传，如：FileZilla、FlashFXP</p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>简单介绍：<br>ubuntu安装完nginx之后的文件结构大致为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 配置文件: /etc/nginx</span><br><span class="line">2. 虚拟主机：/etc/nginx/sites-available</span><br><span class="line">3. 启动程序文件：/usr/sbin/nginx</span><br><span class="line">4. 日志：/var/log/nginx，分别是access.log和error.log</span><br><span class="line">5. 启动脚本：/etc/init.d</span><br><span class="line">6. 默认的虚拟主机的目录：/usr/share/nginx/html</span><br></pre></td></tr></table></figure></p><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/nginx start</span><br></pre></td></tr></table></figure><h4 id="配置nginx静态资源库"><a href="#配置nginx静态资源库" class="headerlink" title="配置nginx静态资源库"></a>配置nginx静态资源库</h4><p>编辑default配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure></p><p>修改内容如下(注意写有中文的地方即可)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    #端口可根据自己的需要更改，我的修改为8888</span><br><span class="line">    listen 8888 default_server;</span><br><span class="line">    listen [::]:888 default_server;</span><br><span class="line"></span><br><span class="line">    # SSL configuration</span><br><span class="line">    #</span><br><span class="line">    # listen 443 ssl default_server;</span><br><span class="line">    # listen [::]:443 ssl default_server;</span><br><span class="line">    #</span><br><span class="line">    # Note: You should disable gzip for SSL traffic.</span><br><span class="line">    # See: https://bugs.debian.org/773332</span><br><span class="line">    #</span><br><span class="line">    # Read up on ssl_ciphers to ensure a secure configuration.</span><br><span class="line">    # See: https://bugs.debian.org/765782</span><br><span class="line">    #</span><br><span class="line">    # Self signed certs generated by the ssl-cert package</span><br><span class="line">    # Don&apos;t use them in a production server!</span><br><span class="line">    #</span><br><span class="line">    # include snippets/snakeoil.conf;</span><br><span class="line"></span><br><span class="line">    root /var/www/html;</span><br><span class="line"></span><br><span class="line">    # Add index.php to the list if you are using PHP</span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        # First attempt to serve request as file, then</span><br><span class="line">        # as directory, then fall back to displaying a 404.</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   #配置图片根目录</span><br><span class="line">   #在server节点里添加url映射，加一个location</span><br><span class="line"></span><br><span class="line">   location /images &#123;</span><br><span class="line">            root   /home/ftpuser/www/;</span><br><span class="line">            autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="编辑nginx-conf配置文件"><a href="#编辑nginx-conf配置文件" class="headerlink" title="编辑nginx.conf配置文件"></a>编辑nginx.conf配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>默认配置有以下内容，将第一行 user: www-data; 修改为： user ftpuser; 目的是便于上传的文件nginx有权限访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 768;</span><br><span class="line">    # multi_accept on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/nginx restart</span><br></pre></td></tr></table></figure><h4 id="浏览器访问路径"><a href="#浏览器访问路径" class="headerlink" title="浏览器访问路径"></a>浏览器访问路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.129:8888/images</span><br></pre></td></tr></table></figure><p>IP地址和端口根据自己的虚拟机和配置填写</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常规操作&quot;&gt;&lt;a href=&quot;#常规操作&quot; class=&quot;headerlink&quot; title=&quot;常规操作&quot;&gt;&lt;/a&gt;常规操作&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="小试牛刀" scheme="https://onikiris.github.io/onikiri-blog/categories/%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    
    
      <category term="潜龙在渊" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%BD%9C%E9%BE%99%E5%9C%A8%E6%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的Redis之旅—Ubuntu篇</title>
    <link href="https://onikiris.github.io/onikiri-blog/2018/01/15/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Redis%E4%B9%8B%E6%97%85%E4%B9%8BUbuntu%E7%AF%87/"/>
    <id>https://onikiris.github.io/onikiri-blog/2018/01/15/从零开始的Redis之旅之Ubuntu篇/</id>
    <published>2018-01-15T12:46:25.000Z</published>
    <updated>2019-05-14T02:45:14.327Z</updated>
    
    <content type="html"><![CDATA[<p>最近接触到的Redis安装都是在CentOS上的操作，奈何自己的笔记本上只有Ubuntu系统（版本：Ubuntu 16.04.3 LTS），翻阅网上各类关于Ubuntu上安装Redis的教程，记录自己不断踩坑的过程<a id="more"></a></p><h3 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h3><p>在执行所有操作前，先使用命令更新软件列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure></p><p>通过以下步骤下载，解压，编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-4.0.6.tar.gz      ---下载</span><br><span class="line">$ tar -zxvf redis-4.0.6.tar.gz         ---解压</span><br><span class="line">$ sudo chmod -R 777 /usr/local      ---获取文件夹修改权限</span><br><span class="line">$ mv redis-4.0.6    /usr/local                                   ---将解压后的redis移动至/usr/local下</span><br><span class="line">$ cd /usr/local/redis-4.0.6                                      ---进入解压缩后的文件夹</span><br><span class="line">$ make                                                           ---编译</span><br></pre></td></tr></table></figure></p><p>备注：Redis2.x版本前不支持集群环境搭建，需要Redis3.x版本以上</p><h3 id="Redis服务启动"><a href="#Redis服务启动" class="headerlink" title="Redis服务启动"></a>Redis服务启动</h3><p>make(编译)完后 redis-4.0.6目录下会出现编译后的redis服务程序redis-server，还有用于测试的客户端程序redis-cli，两个程序位于安装目录 src 目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd src</span><br><span class="line">$ ./redis-server</span><br></pre></td></tr></table></figure></p><p>这种方式启动redis 使用的是默认配置，也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd src</span><br><span class="line">$ ./redis-server ../redis.conf</span><br></pre></td></tr></table></figure></p><p>备注：redis.conf是一个默认的配置文件，我们可以根据需要使用自己的配置文件</p><p>启动redis服务进程后，就可以使用测试客户端程序redis-cli和redis服务交互了<br>如下例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ src/redis-cli</span><br><span class="line">redis&gt; set foo FuckRedis</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line">&quot;FuckRedis&quot;</span><br></pre></td></tr></table></figure></p><h3 id="Redis集群安装"><a href="#Redis集群安装" class="headerlink" title="Redis集群安装"></a>Redis集群安装</h3><p>要让集群正常工作至少需要3个主节点，我们创建6个redis节点，其中三个为主节点，三个为从节点，对应的redis节点的ip和端口对应关系如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192.168.169.129:7000</span><br><span class="line">192.168.169.129:7001</span><br><span class="line">192.168.169.129:7002</span><br><span class="line">192.168.169.129:7003</span><br><span class="line">192.168.169.129:7004</span><br><span class="line">192.168.169.129:7005</span><br></pre></td></tr></table></figure></p><h4 id="第一步：创建集群环境所需的目录"><a href="#第一步：创建集群环境所需的目录" class="headerlink" title="第一步：创建集群环境所需的目录"></a>第一步：创建集群环境所需的目录</h4><p>在解压缩后的redis-4.0.6同根目录下新建文件夹cluster<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /usr/local/cluster</span><br></pre></td></tr></table></figure></p><p>同时在cluster下新建6个文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cluster</span><br><span class="line">$ mkdir  7000 7001 7002 7003 7004 7005</span><br></pre></td></tr></table></figure></p><h4 id="第二步：修改配置文件redis-conf"><a href="#第二步：修改配置文件redis-conf" class="headerlink" title="第二步：修改配置文件redis.conf"></a>第二步：修改配置文件redis.conf</h4><p>先将redis-4.0.6文件夹下的redis.conf复制到cluster<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp /usr/local/redis-4.0.6/redis.conf  /usr/local/cluster</span><br></pre></td></tr></table></figure></p><p>使用vi编辑修改:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cluster</span><br><span class="line">$ vi redis.conf</span><br></pre></td></tr></table></figure></p><p>vi命令参考此篇文章，感觉vi命令麻烦的话，使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit redis.conf</span><br></pre></td></tr></table></figure></p><p>修改配置文件内容如下（修改配置时注意去掉前面的注释# ）:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">port  7000          ---端口7000，7001，7002，7003，7004，7005        </span><br><span class="line">bind 192.168.169.129              ---默认ip为192.168.169.129，需要改为其他节点机器可访问的ip，否则创建集群时无法访问对应的端口，无法创建集群</span><br><span class="line">daemonize    yes                      ---redis后台运行</span><br><span class="line">cluster-enabled  yes          ---开启集群  把注释#去掉</span><br><span class="line">cluster-config-file  nodes_7000.conf  ---集群的配置  配置文件首次启动自动生成 7000，7001，7002，7003，7004，7005</span><br><span class="line">cluster-node-timeout  15000           ---请求超时  默认15秒，可自行设置</span><br><span class="line">appendonly  yes                       ---aof日志开启  有需要就开启，它会每次写操作都记录一条日志</span><br></pre></td></tr></table></figure></p><p>备注：（我的本机ip是192.168.169.129）可通过<code>$ ifconfig</code>查看本机ip<br>再将修改后的redis.conf复制到cluster下的6个文件夹中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7000/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7001/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7002/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7003/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7004/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7005/</span><br></pre></td></tr></table></figure></p><p>分别进入到上面的六个新建的文件夹中， 按照上面的配置介绍中的样例进行对应修改</p><p>比较麻烦的方式启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/redis-4.0.6/src/</span><br><span class="line">$ redis-server ../../cluster/7000/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7001/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7002/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7003/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7004/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7005/redis.conf</span><br></pre></td></tr></table></figure></p><p>我个人使用的方式，不喜欢的可不用<br>脚本快速启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/loacl/cluster</span><br><span class="line">$ vi redis-start.sh</span><br><span class="line"></span><br><span class="line">#填入以下命令：</span><br><span class="line">cd /usr/local/cluster/7000/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7001/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7002/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7003/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7004/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7005/</span><br><span class="line">redis-server redis.conf</span><br></pre></td></tr></table></figure></p><p>启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./redis-start.sh</span><br></pre></td></tr></table></figure></p><p>使用脚本快速关闭服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cluster</span><br><span class="line">$ vi redis-shutdown.sh</span><br><span class="line"></span><br><span class="line"># 填写如下命令：</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7000 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7001 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7002 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7003 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7004 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7005 shutdown</span><br></pre></td></tr></table></figure></p><p>关闭服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./redis-shutdown.sh</span><br></pre></td></tr></table></figure></p><p>查看服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef|grep redis-server</span><br></pre></td></tr></table></figure></p><p>出现以下类似信息表示服务成功启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis      3062   1947  0 00:26 ?        00:00:00 redis-server 192.168.169.129:7000 [cluster]</span><br><span class="line">redis      3075   1947  0 00:26 ?        00:00:00 redis-server 192.168.169.129:7001 [cluster]</span><br><span class="line">redis      3080   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7002 [cluster]</span><br><span class="line">redis      3087   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7003 [cluster]</span><br><span class="line">redis      3092   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7004 [cluster]</span><br><span class="line">redis      3099   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7005 [cluster]</span><br><span class="line">redis      3132   3022  0 00:32 pts/4    00:00:00 grep --color=auto redis-server</span><br></pre></td></tr></table></figure></p><p>虽然六个服务都起来了， 但这时他们之间还不知道彼此的存在， 无法组成集群提供服务</p><h4 id="第三步：连接服务"><a href="#第三步：连接服务" class="headerlink" title="第三步：连接服务"></a>第三步：连接服务</h4><p>使用工具 ‘redis-trib.rb’ 将上面的六个节点连接起来， redis-trib.rb 是需要ruby环境<br>先安装ruby环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install ruby</span><br></pre></td></tr></table></figure></p><p>为了执行 redis-trib.rb 需要安装gem redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install redis</span><br></pre></td></tr></table></figure></p><p>安装时可能会被墙，可以在RubyGems下载最新版<br>使用命令关联集群（ip地址和对应的端口号）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/redis-4.0.6/src</span><br><span class="line">$ ./redis-trib.rb create --replicas 1 192.168.169.129:7000 192.168.169.129:7001 192.168.169.129:7002 192.168.169.129:7003 192.168.169.129:7004 192.168.169.129:7005</span><br></pre></td></tr></table></figure></p><p>备注：参数1表示为每个主节点创建一个从节点，其他参数是实例的地址集合<br>出现以下信息表示集群启动成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Creating cluster</span><br><span class="line">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class="line">Using 3 masters:</span><br><span class="line">192.168.169.129:7000</span><br><span class="line">192.168.169.129:7001</span><br><span class="line">192.168.169.129:7002</span><br><span class="line">Adding replica 192.168.169.129:7003 to 192.168.169.129:7000</span><br><span class="line">Adding replica 192.168.169.129:7004 to 192.168.169.129:7001</span><br><span class="line">Adding replica 192.168.169.129:7005 to 192.168.169.129:7002</span><br><span class="line">M: ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d 192.168.169.129:7000</span><br><span class="line">   slots:0-5460 (5461 slots) master</span><br><span class="line">M: 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9 192.168.169.129:7001</span><br><span class="line">   slots:5461-10922 (5462 slots) master</span><br><span class="line">M: 8ad9a9283c0fc34ffdce686d0cf28426b843dbef 192.168.169.129:7002</span><br><span class="line">   slots:10923-16383 (5461 slots) master</span><br><span class="line">S: e08c6b78c4b6b866c4fa2154c3d4ea790cc3c2b1 192.168.169.129:7003</span><br><span class="line">   replicates ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d</span><br><span class="line">S: fb7eab7cff0d5c06c500bdd6f138e4af970ca67b 192.168.169.129:7004</span><br><span class="line">   replicates 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9</span><br><span class="line">S: 0e889f689fcdf99061adcc807f6ed8815d330c14 192.168.169.129:7005</span><br><span class="line">   replicates 8ad9a9283c0fc34ffdce686d0cf28426b843dbef</span><br><span class="line">Can I set the above configuration? (type &apos;yes&apos; to accept): yes</span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class="line">Waiting for the cluster to join...</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.169.129:7000)</span><br><span class="line">M: ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d 192.168.169.129:7000</span><br><span class="line">   slots:0-5460 (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9 192.168.169.129:7001</span><br><span class="line">   slots:5461-10922 (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 8ad9a9283c0fc34ffdce686d0cf28426b843dbef 192.168.169.129:7002</span><br><span class="line">   slots:10923-16383 (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: e08c6b78c4b6b866c4fa2154c3d4ea790cc3c2b1 192.168.169.129:7003</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d</span><br><span class="line">S: fb7eab7cff0d5c06c500bdd6f138e4af970ca67b 192.168.169.129:7004</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9</span><br><span class="line">S: 0e889f689fcdf99061adcc807f6ed8815d330c14 192.168.169.129:7005</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 8ad9a9283c0fc34ffdce686d0cf28426b843dbef</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure></p><p>使用redis-cli命令进入集群环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli -h 192.168.169.129 -p 7000 -c</span><br></pre></td></tr></table></figure></p><p>备注：-h 指定IP地址 -p 指定端口<br>能进行如下测试表示成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">redis 192.168.169.129:7000&gt; set foo bar</span><br><span class="line">-&gt; Redirected to slot [12182] located at 192.168.169.129:7002</span><br><span class="line">OK</span><br><span class="line">redis 192.168.169.129:7002&gt; set hello world</span><br><span class="line">-&gt; Redirected to slot [866] located at 192.168.169.129:7000</span><br><span class="line">OK</span><br><span class="line">redis 192.168.169.129:7000&gt; get foo</span><br><span class="line">-&gt; Redirected to slot [12182] located at 192.168.169.129:7002</span><br><span class="line">&quot;bar&quot;</span><br><span class="line">redis 192.168.169.129:7000&gt; get hello</span><br><span class="line">-&gt; Redirected to slot [866] located at 192.168.169.129:7000</span><br><span class="line">&quot;world&quot;</span><br></pre></td></tr></table></figure></p><p>至此，Redis相关安装全部结束</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近接触到的Redis安装都是在CentOS上的操作，奈何自己的笔记本上只有Ubuntu系统（版本：Ubuntu 16.04.3 LTS），翻阅网上各类关于Ubuntu上安装Redis的教程，记录自己不断踩坑的过程
    
    </summary>
    
      <category term="小试牛刀" scheme="https://onikiris.github.io/onikiri-blog/categories/%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    
    
      <category term="潜龙在渊" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%BD%9C%E9%BE%99%E5%9C%A8%E6%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>2018，你好呀！</title>
    <link href="https://onikiris.github.io/onikiri-blog/2017/12/31/2018%EF%BC%8C%E4%BD%A0%E5%A5%BD%E5%91%80%EF%BC%81/"/>
    <id>https://onikiris.github.io/onikiri-blog/2017/12/31/2018，你好呀！/</id>
    <published>2017-12-30T16:00:00.000Z</published>
    <updated>2019-05-14T02:45:14.324Z</updated>
    
    <content type="html"><![CDATA[<p>年末已至，忽然有了想写点什么的冲动<br>最近看着朋友圈各自刷着18岁的自己，提醒我该长点心了，最能拼搏年纪就是现在了！<a id="more"></a></p><h3 id="新年那么好，那么暖"><a href="#新年那么好，那么暖" class="headerlink" title="新年那么好，那么暖"></a>新年那么好，那么暖</h3><p>2017的新年是和小弟在外婆家过的，融安镇-安宁村，很喜欢这个名字。<br>外婆记忆力不好的事是听老妈说的，有时候外公在都认不出外公来，想着都有些心疼外公。<br>我在那边的时候，其实很少和外公外婆聊天的，整天捧着笔记本窝在房里捣鼓自己的事。偶尔上趟街，其实怕上街，不会讲柳州话，老听不懂在讲些什么。</p><p>附近都是外公那一大家子的，过年的氛围很浓的。自然少不了每家都去蹭吃蹭喝，可唯独喝酒不行，不满意自己的就是这个了。小弟喝酒是可以的，家酿、啤的、白的、都能，比我好太多，<br>过年少不得的打牌活动也是有参与的，遗憾的是手气不行，输是常事，<br>新年就这样在简单和温馨的过去了，一天到晚的吃吃喝喝玩玩闹闹，<br>比较后悔的是没有多陪陪外公外婆他们，能去一次已经不容易，却不被自己珍惜。</p><p>新的一年祝愿他们多喜乐，长安宁</p><h3 id="意外总是突如其来的"><a href="#意外总是突如其来的" class="headerlink" title="意外总是突如其来的"></a>意外总是突如其来的</h3><p>从镇上到柳州市区有四个多小时车程，到火车站的时候，车刚好开了一分钟，一分不多一分不少。<br>讲道理7点从镇上出发，4个多小时还是错过了12点多的车，讲不通嘛，<br>只好重新买票，直达是不存在的了，所以呢，只能买了几个中转的票，<br>漫长归家旅途让我意识到，提前时间多早都好，只要不晚就来得及，毕竟转几站的钱省下来都可以吃顿好的了。几经波折，终是安全到家。</p><p>这段旅程倒是可惜了好多，到了不曾去过的城市，却没有时间去感受，欣赏另一番城市的景象。</p><h3 id="带都带不动的节奏"><a href="#带都带不动的节奏" class="headerlink" title="带都带不动的节奏"></a>带都带不动的节奏</h3><p>生活就是在写Bug，调Bug中度过的<br>作为万千码农中的一份子，日常生活不过如此了<br>原本还想说自己是程序猿的，看到网络上月薪不过三万的梗，瞬间心塞。<br>在写Bug的过程中，学习了很多新东西，<br>至少眼界开阔了，知道了全球最大的男性同性交友网站(Github)，这个叩开我新世界大门的平台<br>作为该平台的萌新一枚，还不敢在上面提交自己的日常，不敢Po自己的自拍<br>emmm…更不敢想什么结对编程….</p><p>慢慢的，接触到Github后，又知道了Github pages。这东西勾起了我的欲望<br>一想想自己可以在上面随意折腾自己喜欢的页面，刺激的不得了，每天大战至凌晨<br>一段时间下来，腰也好了，腿也不疼了，心脏也棒棒哒，一口气跑五步都不带喘气的<br>迫于设计细胞缺失，不得已去搜索好看的界面想办法去修改，<br>最后发现我怕缺的不是设计的细胞，应该是脑细胞。</p><h3 id="哪怕生活多想潜规则我，也有人陪在身边放肆欢笑"><a href="#哪怕生活多想潜规则我，也有人陪在身边放肆欢笑" class="headerlink" title="哪怕生活多想潜规则我，也有人陪在身边放肆欢笑"></a>哪怕生活多想潜规则我，也有人陪在身边放肆欢笑</h3><p>在暗无天日的写Bug工作中，<br>小亮砸基本上每个月都会过来玩，男人间就该有点说不清道不明的激情啊，其实是去KTV唱歌，两个人，唱的鬼哭狼嚎也没人说，不嚎了就是胡侃瞎聊，我吐槽我的，他吐槽他的，很有意思啊。<br>偶尔玩玩手游放松一下备受折磨的耳膜，顺带鄙视一下他的王者技术也是很开心的。<br>至少枯燥的生活中有那么一个人愿意大老远不嫌麻烦跑过来(谁让他那鬼地方没有玩的地方呢)，陪着你，也是很好很好的<br>至少我明白：生活不止眼前的苟且，还有远方的苟且，且过且珍惜。</p><h3 id="被打乱的生活节奏，依然美好"><a href="#被打乱的生活节奏，依然美好" class="headerlink" title="被打乱的生活节奏，依然美好"></a>被打乱的生活节奏，依然美好</h3><p>国庆假期原本是打算出去浪的飞起的，后来被一系列事情打破计划，人已崩溃，虽然没能出去成功。<br>但是在家陪着老爸老妈完整的追完一部剧了，现在剧名都不记得了，不过一起嗑瓜子看剧，瞎聊天，拌拌嘴什么的很有爱啊。<br>想想当时偶尔听逗比老爸跟着电视说两句台词，我妈在旁边开嘲讽，很幸福的，可惜两个老弟没回家。</p><h3 id="劝我出门对于bb来说无异于慢性自杀"><a href="#劝我出门对于bb来说无异于慢性自杀" class="headerlink" title="劝我出门对于bb来说无异于慢性自杀"></a>劝我出门对于bb来说无异于慢性自杀</h3><p>我是个很难出去玩的人，要是能够窝在家是件很爽的事啊，出去就是受罪。<br>可是，不管你多宅，总会有一个在你身边blabla不停，想带你出去的人<br>偶有时间会和bb出去吃烤肉，那个滋味回味无穷，基本上和bb在一起呢，都是听他说很多很多的事，我说不出什么事，不然他对不起bb这个词<br>现在的我们呢，走上了两条不归路，他选择了去实施，bb对开发并不热衷，关于更深层次的逻辑是不太喜欢的，当然，同为不归路，自然祝福他前路顺畅，如同我期望自己一样期望他</p><p>有时和唐杀马一起畅游王者峡谷，互喷(其实是被喷)，感受一下泼妇骂街的杀伤力<br>有时候调侃阿姨还没有男盆友，作为大龄剩女，我们很忧桑她的后半生<br>有时候骂着代码，却不得不去写。<br>其实好想记下身边近友的好多事啊，要是哪天我们彼此各奔东西，哪有时间再相聚。</p><h3 id="关于我想要的未来"><a href="#关于我想要的未来" class="headerlink" title="关于我想要的未来"></a>关于我想要的未来</h3><p>最近一段时间基本上处于在不停学习的一个状态，主要原因是确定了一个目标，一个目的地<br>目标：混到能拥有自己的一个窝，一猫一狗或两人<br>目的地：魔都<br>//放一张上海的图片<br>N+年的计划：学习更多的技术，准备写个人博客，记录我的漫长人生路<br>短期的规划：在上海寻一份工作并且在目前的职业上有更大的提升，不仅仅是技术，更多的是生活方式的改变，为人处世的态度，也希望认识更多优秀的人，带我混迹IT界。</p><p>上海有着魔都的名称，总让人忍不住上前，去感受她的魅力。<br>我还年轻，我想要另一种生活塑造一个全新的自己，我想要去我想去的城市，我想做我喜欢的工作。</p><p>唯有将那份无奈和心疼藏于心底：父母在家，也将要远行。</p><h3 id="那么，2018，你好呀！"><a href="#那么，2018，你好呀！" class="headerlink" title="那么，2018，你好呀！"></a>那么，2018，你好呀！</h3><p>我已经乘上你这趟列车，请你好好照顾我，我不知何时是归途。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年末已至，忽然有了想写点什么的冲动&lt;br&gt;最近看着朋友圈各自刷着18岁的自己，提醒我该长点心了，最能拼搏年纪就是现在了！
    
    </summary>
    
      <category term="初露锋芒" scheme="https://onikiris.github.io/onikiri-blog/categories/%E5%88%9D%E9%9C%B2%E9%94%8B%E8%8A%92/"/>
    
    
      <category term="我的旅途" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%88%91%E7%9A%84%E6%97%85%E9%80%94/"/>
    
  </entry>
  
  <entry>
    <title>如果给你一个没有口袋的哆啦A梦，你还要吗？</title>
    <link href="https://onikiris.github.io/onikiri-blog/2017/04/17/%E5%A6%82%E6%9E%9C%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E6%B2%A1%E6%9C%89%E5%8F%A3%E8%A2%8B%E7%9A%84%E5%93%86%E5%95%A6A%E6%A2%A6%EF%BC%8C%E4%BD%A0%E8%BF%98%E8%A6%81%E5%90%97%EF%BC%9F/"/>
    <id>https://onikiris.github.io/onikiri-blog/2017/04/17/如果给你一个没有口袋的哆啦A梦，你还要吗？/</id>
    <published>2017-04-17T12:46:25.000Z</published>
    <updated>2019-05-14T02:45:14.328Z</updated>
    
    <content type="html"><![CDATA[<p>今天忽然间看了哆啦A梦伴我同行</p><p>那只没有耳朵的机器猫，那只对铜锣烧情有独钟的蓝胖子，就是关于童年的一切美好和希望。</p><p>看到未来的大雄对着睡着的哆啦A梦轻轻一笑，对年轻的大雄说：我想，我还是不见了，那是你年轻时的伙伴，好好珍惜和他在一起的日子。</p><p>有多少人，在你成长的路上一路相伴，给你带来欢笑和力量，又在你成长的路上，渐渐消失。<a id="more"></a></p><p>此时想起以前看过哆啦A梦的两个结局</p><h4 id="最悲伤的结局"><a href="#最悲伤的结局" class="headerlink" title="最悲伤的结局"></a>最悲伤的结局</h4><p>一天早晨，大雄醒了过来，发现自己坐在一把奇怪的椅子上，眼前就是哆啦A梦。哆啦A梦大声地向它打招呼，可是表情呆滞。大雄试图从椅子上站起来，却摔倒了。</p><p>哆啦A梦说，由于你长时间坐在椅子上且生命都是靠营养液维持，所以你的肌肉已经萎缩，不方便行走。</p><p>大雄不明白哆啦A梦说的是什么意思。</p><p>哆啦A梦向他解释道，在22世纪，人类的科技大幅度发展，但是新的能源和食物问题没有得到解决，地球的人口爆炸式增长。于是，当时的人类出于总体利益的考虑，决定对新诞生的婴儿统一进行大脑测试，被证实智力处于一定水平线之下的新生儿将会被连接上一种维持生命的装置，这种装置会给他们输送低成本的营养液维持生命，并且会让他们进入一种虚拟状态。在这种虚拟状态下，这个装置将会模拟出新奇、有趣的场景，让人感受到现实世界里体会不到的快乐。</p><p>于是，一切都明白了。</p><p>那些哆啦A梦口袋里的道具——竹蜻蜓、任意门、桃太郎饭团、时光机…</p><p>那些童年的好友——静香、胖虎、小夫…</p><p>那些一起经历过的不可思议的事情——海底鬼岩城、一千零一夜、梦幻三剑士、魔界大冒险…</p><p>这一切都是装置模拟出来的，为的只是给那些智力相对较低的儿童一种补偿，让他们能在虚幻世界里快乐，体会童年的美好。而童年结束的时候，一切也都结束了。<br>营养装置只是一种人道考虑，当这些特殊儿童满14岁的时候，残酷的现实就要开始了。<br>由于地球的资源过于紧张，所以那些在虚拟世界里靠营养液维持生命的儿童要被强制“离开”，即被杀死。<br>“离开”之前，他们唯一的权利就是知道事实的真相。</p><p>那个长得像哆啦A梦的机器人对大雄说：“你应该感到庆幸，因为你在虚幻世界里体会到了现实里的人一辈子都感受不到的快乐，现实里的人要经历工作的劳累和残酷的社会竞争，而你什么都不用做，只要体会那些新奇就好。所以你不要为你的‘离去’感到害怕，相反，融入忙碌的现实社会才是最可怕的事情。”</p><p>大雄流着泪听它讲完这些，恳求它再让自己进入一下虚幻世界里，跟那里的朋友道别。机器人同意了。</p><p>大雄重新进入了虚幻世界，他用自己存下的零用钱给好朋友们买了很多礼物——小夫的遥控飞机，胖虎的棒球帽，静香的裙子…</p><p>最后，他用剩下的钱买了哆啦A梦最爱吃的铜锣烧，跟家里人一起吃了最后一次团圆饭。</p><p>“大雄懂事了呢。” 妈妈笑着说。</p><p>“是的，因为我长大了……” 大雄眼睛里含着泪水。</p><p>在当天晚上，大雄紧紧抱住了虚幻世界里的哆啦A梦：“哆啦A梦，你说我们是不是会永远在一起呢……”</p><p>这时，漫画分镜切到了现实世界，那个哆啦A梦模样的机器人伸出圆圆的手触碰到了闭着眼睛的大雄。</p><p>大雄的身躯一阵抽搐，然后倒在了地上。</p><p>最后一个画面，那个机器人用冰冷的声音说了一句：“完成任务，目标已经离去……”。</p><h4 id="最温情的结局"><a href="#最温情的结局" class="headerlink" title="最温情的结局"></a>最温情的结局</h4><p>某天，大雄如往常般，忘了做作业在学校被老师骂，也如往常般被小夫、胖虎他们打。连梦想中的老婆静香也答应要嫁给别人。总之，对大雄来讲，生活就是一团糟。今天跟昨天没什么两样。唯一的变化是，哆啦A梦突然变成了植物人，无论大雄怎么踢、打、骂，哆啦A梦都没有反应。大雄不知道哆啦A梦到底发生了什么事，伤心得哭了整晚。可是，无论怎样，哆啦A梦也只是纹丝不动地坐在那里，大雄伸手到口袋里，但口袋也毫无动静。然后大雄想起抽屉里的时光机，他穿着睡衣就乘坐时光机去找哆啦A梦的妹妹哆啦美。</p><p>哆啦美还没完全听完说明，就被大雄催着坐上时光机飞回20世纪。哆啦美一看哥哥动也不动，马上知道是电池用完了。正想换电池时，哆啦美想起一个非常重大的事实——没有备用电源……</p><p>大雄不明白其中意思，只在一旁催，哆啦美只好问大雄：“你愿意让哥哥跟你的回忆都消失吗？”原来旧型的机器人的耳朵里装有备用电源，以便充电时能保持至今为止的所有记忆。可是……<br>哆啦A梦没有耳朵——这是众所周知的——大雄终于了解到事情的困难了。与哆啦A梦的种种回忆在大雄的脑海里奔腾：他们曾一起飞到过去、未来，也曾到恐龙世界，海底世界，更在宇宙打过仗……</p><p>哆啦美又解释给大雄听：若要装新电池，哆啦A梦醒来时会失去一切与大雄曾有过的记忆。若保持现状，记忆不会消失。结果，大雄选择保持现状。此时，大雄还在上小学六年级。</p><p>十数年后……</p><p>从海外归国的大雄已成长为英俊迷人的青年，并就职于某家尖端科技企业。他身边的新娘，正是静香。当年，哆啦美回到22世纪后，哆啦A梦一直被大雄悉心地保管在家里的壁橱里，大雄只跟身边的人们说，哆啦A梦回到未来的世界去了。时间一久，哆啦A梦似乎真的走出了人们的生活。</p><p>现在，大雄在他自己的研究室中。他叫来平日严禁其出入研究室的妻子静香，对她说：“看好，我要按开关了。”说完，大雄情不自禁滚下两串泪珠。为了这一刻，他苦学了十几年……</p><p>为了这一刻，一个老是忘了做作业、成绩倒数的笨学生，拼命用功读书，成绩一点点攀升——初中、高中、大学，留学知名大学——一直艰难地走到了今天</p><p>开关按下了，久久的静寂、静寂……</p><p>终于，哆啦A梦开口了：“大雄，我等你很久了。”</p><h4 id="我很喜欢电影里的话语，触动着我的心"><a href="#我很喜欢电影里的话语，触动着我的心" class="headerlink" title="我很喜欢电影里的话语，触动着我的心"></a>我很喜欢电影里的话语，触动着我的心</h4><blockquote><p>其实我还是很担心你耶<br> 如果可以继续留在你身边的话<br> 这样子该有多好<br> 我不在<br> 你也可以好好照顾自己吗<br> 如果胖虎和小夫又欺负你<br> 你可以自己勇敢面对吗 </p></blockquote><blockquote><p>如果不靠我自己的力量获得胜利<br> 哆啦A梦他就不能安心的回到未来世界</p></blockquote><blockquote><p>哆啦A梦<br> 我真的赢了<br> 只靠我一个人<br> 这样你就能安心地回去了吧</p></blockquote><blockquote><p>就算没有我，你也能自己好好地生活吗？</p></blockquote><h4 id="会有这样的剧情吗？"><a href="#会有这样的剧情吗？" class="headerlink" title="会有这样的剧情吗？"></a>会有这样的剧情吗？</h4><p>大雄长大了，哆啦A梦会说：“你长大了，也长高了，真好！”</p><p>“可是……我不想长高”<br>“为什么”<br>“因为我长高了哆啦A梦就不能牵到我的手了”</p><p>有一天，大雄老了，他躺在病床上，对哆啦A梦说：“我死之后，你回到未来，然后好好活着。” </p><p>可是哆啦A梦并没有去未来，他回到了大雄小时候，对他说：“你好，我是哆啦A梦，请多指教。”</p><p>如果给我一个没有口袋的哆啦A梦，我想我也要</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天忽然间看了哆啦A梦伴我同行&lt;/p&gt;
&lt;p&gt;那只没有耳朵的机器猫，那只对铜锣烧情有独钟的蓝胖子，就是关于童年的一切美好和希望。&lt;/p&gt;
&lt;p&gt;看到未来的大雄对着睡着的哆啦A梦轻轻一笑，对年轻的大雄说：我想，我还是不见了，那是你年轻时的伙伴，好好珍惜和他在一起的日子。&lt;/p&gt;
&lt;p&gt;有多少人，在你成长的路上一路相伴，给你带来欢笑和力量，又在你成长的路上，渐渐消失。
    
    </summary>
    
      <category term="碎碎念" scheme="https://onikiris.github.io/onikiri-blog/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="情不知所起" scheme="https://onikiris.github.io/onikiri-blog/tags/%E6%83%85%E4%B8%8D%E7%9F%A5%E6%89%80%E8%B5%B7/"/>
    
  </entry>
  
  <entry>
    <title>初入框架SpringMVC—流程解析</title>
    <link href="https://onikiris.github.io/onikiri-blog/2017/03/22/%E5%88%9D%E5%85%A5%E6%A1%86%E6%9E%B6SpringMVC%E2%80%94%E6%B5%81%E7%A8%8B%E8%A7%A3%E6%9E%90/"/>
    <id>https://onikiris.github.io/onikiri-blog/2017/03/22/初入框架SpringMVC—流程解析/</id>
    <published>2017-03-22T12:46:25.000Z</published>
    <updated>2019-05-14T02:45:14.328Z</updated>
    
    <content type="html"><![CDATA[<h4 id="什么是MVC"><a href="#什么是MVC" class="headerlink" title="什么是MVC"></a>什么是MVC</h4><p>MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。—— 来自于<a href="https://baike.baidu.com/item/MVC框架/9241230?fr=aladdin&amp;fromid=85990&amp;fromtitle=MVC" target="_blank" rel="noopener">百度百科</a></p><p>设计模式：设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来<a id="more"></a></p><h4 id="MVC请求流程图"><a href="#MVC请求流程图" class="headerlink" title="MVC请求流程图"></a>MVC请求流程图</h4><h5 id="最典型的MVC模式：JSP-Servlet-JavaBean"><a href="#最典型的MVC模式：JSP-Servlet-JavaBean" class="headerlink" title="最典型的MVC模式：JSP+Servlet+JavaBean"></a>最典型的MVC模式：JSP+Servlet+JavaBean</h5><p>Model：JavaBean作为模型，既可以作为数据模型来封装业务数据，又可以作为业务逻辑模型来包含应用的业务操作</p><p>View：JSP作为表现层，负责提供页面为用户展示数据，提供相应的表单（Form）来用于用户的请求，并在适当的时候（点击按钮）向控制器发出请求来请求模型进行更新</p><p>Controller：Serlvet作为控制器，用来接收用户提交的请求，然后获取请求中的数据，将之转换为业务模型需要的数据模型，然后调用业务模型相应的业务方法进行更新，同时根据业务执行结果来选择要返回的视图</p><h4 id="什么是SpringMVC"><a href="#什么是SpringMVC" class="headerlink" title="什么是SpringMVC"></a>什么是SpringMVC</h4><p>Spring Web MVC是一种基于Java的实现了Web MVC设计模式的请求驱动类型的轻量级Web框架，即使用了MVC架构模式的思想，将web层进行职责解耦，基于请求驱动指的就是使用请求-响应模型，框架的目的就是帮助我们简化开发，Spring Web MVC也是要简化我们日常Web开发的。</p><h5 id="SpringMVC优势"><a href="#SpringMVC优势" class="headerlink" title="SpringMVC优势"></a>SpringMVC优势</h5><h6 id="清晰的角色划分"><a href="#清晰的角色划分" class="headerlink" title="清晰的角色划分"></a>清晰的角色划分</h6><ul><li>前端控制器（DispatcherServlet）</li><li>请求到处理器映射（HandlerMapping）</li><li>处理器适配器（HandlerAdapter）</li><li>视图解析器（ViewResolver）</li><li>处理器或页面控制器（Controller）</li><li>验证器（ Validator）</li><li>命令对象（Command 请求参数绑定到的对象就叫命令对象）</li><li>表单对象（Form Object 提供给表单展示和提交到的对象就叫表单对象）</li></ul><h6 id="分工明确"><a href="#分工明确" class="headerlink" title="分工明确"></a>分工明确</h6><ul><li>而且扩展点相当灵活，可以很容易扩展，虽然几乎不需要；</li><li>无需继承API直接命令操作</li><li>由于命令对象就是一个POJO，无需继承框架特定API，可以使用命令对象直接作为业务对象；</li></ul><h6 id="与spring无缝衔接"><a href="#与spring无缝衔接" class="headerlink" title="与spring无缝衔接"></a>与spring无缝衔接</h6><ul><li>与Spring 其他框架无缝集成，是其它Web框架所不具备的； </li></ul><h6 id="适配任意类作为处理器"><a href="#适配任意类作为处理器" class="headerlink" title="适配任意类作为处理器"></a>适配任意类作为处理器</h6><ul><li>可适配，通过HandlerAdapter可以支持任意的类作为处理器； </li></ul><h6 id="支持简单定制"><a href="#支持简单定制" class="headerlink" title="支持简单定制"></a>支持简单定制</h6><ul><li>可定制性，HandlerMapping、ViewResolver等能够非常简单的定制；</li></ul><h6 id="功能强大"><a href="#功能强大" class="headerlink" title="功能强大"></a>功能强大</h6><ul><li>功能强大的数据验证、格式化、绑定机制； </li></ul><h6 id="灵活的单元测试"><a href="#灵活的单元测试" class="headerlink" title="灵活的单元测试"></a>灵活的单元测试</h6><ul><li>利用Spring提供的Mock对象能够非常简单的进行Web层单元测试； </li></ul><h6 id="更容易的主题与国际化"><a href="#更容易的主题与国际化" class="headerlink" title="更容易的主题与国际化"></a>更容易的主题与国际化</h6><ul><li>本地化、主题的解析的支持，使我们更容易进行国际化和主题的切换。</li></ul><h6 id="强大的jsp标签库"><a href="#强大的jsp标签库" class="headerlink" title="强大的jsp标签库"></a>强大的jsp标签库</h6><ul><li>强大的JSP标签库，使JSP编写更容易。 </li><li>还有比如RESTful风格的支持、简单的文件上传、约定大于配置的契约式编程支持、基于注解的零配置支持等等。</li></ul><h4 id="SpringMVC流程图"><a href="#SpringMVC流程图" class="headerlink" title="SpringMVC流程图"></a>SpringMVC流程图</h4><h5 id="springmvc运行原理"><a href="#springmvc运行原理" class="headerlink" title="springmvc运行原理"></a>springmvc运行原理</h5><p>核心架构的具体流程步骤如下： </p><ol><li><p>首先用户发送请求——&gt;DispatcherServlet，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行处理，作为统一访问点，进行全局的流程控制； </p></li><li><p>DispatcherServlet——&gt;HandlerMapping,HandlerMapping将会把请求映射为HandlerExecutionChain对象（包含一个Handler处理器（页面控制器）对象、多个HandlerInterceptor拦截器）对象，通过这种策略模式，很容易添加新的映射策略； </p></li><li><p>DispatcherServlet——&gt;HandlerAdapter，HandlerAdapter将会把处理器包装为适配器，从而支持多种类型的处理器，即适配器设计模式的应用，从而很容易支持很多类型的处理器； </p></li><li><p>HandlerAdapter——&gt;处理器功能处理方法的调用，HandlerAdapter将会根据适配的结果调用真正的处理器的功能处理方法，完成功能处理；并返回一个ModelAndView对象（包含模型数据、逻辑视图名）； </p></li><li><p>ModelAndView的逻辑视图名——&gt; ViewResolver， ViewResolver将把逻辑视图名解析为具体的View，通过这种策略模式，很容易更换其他视图技术； </p></li><li><p>View——&gt;渲染，View会根据传进来的Model模型数据进行渲染，此处的Model实际是一个Map数据结构，因此很容易支持其他视图技术； </p></li><li><p>返回控制权给DispatcherServlet，由DispatcherServlet返回响应给用户，到此一个流程结束。</p></li></ol><h5 id="步骤详解："><a href="#步骤详解：" class="headerlink" title="步骤详解："></a>步骤详解：</h5><ul><li><p>第一步：用户发送请求（URL链接）到前端控制器（DispatchServlet）</p></li><li><p>第二步：处理器映射器（HandlerMapping）请求查找处理器（Handler）</p></li><li><p>第三步：处理器映射器（HandlerMapping）向前端控制器（DispatchServlet）返回处理器（Handler）</p></li><li><p>第四步：前端控制器（DispatchServlet）调用处理器适配器（HandlerAdatper）执行处理器（Handler）</p></li><li><p>第五步：处理器适配器（HandlerAdatper）执行处理器（Handler）</p></li><li><p>第六步：处理器（Handler）执行完成后给处理器适配器（HandlerAdatper）返回（ModelAndView）</p></li><li><p>第七步：处理器适配器（HandlerAdatper）向前端控制器（DispatchServlet）返回（ModelAndView）</p></li><li><p>第八步：前端控制器（DispatchServlet）请求视图解析器（ViewResolver）进行视图解析</p></li><li><p>第九步：视图解析器（ViewResolver）向前端控制器（DispatchServlet）返回View</p></li><li><p>第十步：前端控制器（DispatchServlet）进行视图渲染，视图渲染指将模型数据（在ModelAndView对象）填充到Request域</p></li><li><p>第十一步：前端控制器（DispatchServlet）向用户返回响应结果</p></li></ul><h4 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h4><p>DispatcherServlet：前端控制器</p><p>用户请求到达前端控制器，它就相当于mvc模式中的c，dispatcherServlet是整个流程控制的中心，由它调用其它组件处理用户的请求，dispatcherServlet的存在降低了组件之间的耦合性。</p><p>HandlerMapping：处理器映射器 </p><p>HandlerMapping负责根据用户请求找到Handler即处理器，springmvc提供了不同的映射器实现不同的映射方式，例如：配置文件方式，实现接口方式，注解方式等。</p><p>Handler：处理器 </p><p>Handler 是继DispatcherServlet前端控制器的后端控制器，在DispatcherServlet的控制下Handler对具体的用户请求进行处理。<br>由于Handler涉及到具体的用户业务请求，所以一般情况需要程序员根据业务需求开发Handler。</p><p>HandlAdapter：处理器适配器 </p><p>通过HandlerAdapter对处理器进行执行，这是适配器模式的应用，通过扩展适配器可以对更多类型的处理器进行执行。</p><p>View Resolver：视图解析器 </p><p>View Resolver负责将处理结果生成View视图，View Resolver首先根据逻辑视图名解析成物理视图名即具体的页面地址，再生成View视图对象，最后对View进行渲染将处理结果通过页面展示给用户。</p><p>View：视图 </p><p>springmvc框架提供了很多的View视图类型的支持，包括：jstlView、freemarkerView、pdfView等。我们最常用的视图就是jsp。<br>一般情况下需要通过页面标签或页面模版技术将模型数据通过页面展示给用户，需要由程序员根据业务需求开发具体的页面。</p><p>说明：在springmvc的各个组件中，处理器映射器、处理器适配器、视图解析器称为springmvc的三大组件。<br>需要用户开发的组件有handler、view</p><p>文章中的图片均来源于百度</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;什么是MVC&quot;&gt;&lt;a href=&quot;#什么是MVC&quot; class=&quot;headerlink&quot; title=&quot;什么是MVC&quot;&gt;&lt;/a&gt;什么是MVC&lt;/h4&gt;&lt;p&gt;MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。—— 来自于&lt;a href=&quot;https://baike.baidu.com/item/MVC框架/9241230?fr=aladdin&amp;amp;fromid=85990&amp;amp;fromtitle=MVC&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;百度百科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;设计模式：设计模式是软件开发人员在软件开发过程中面临的一般问题的解决方案。这些解决方案是众多软件开发人员经过相当长的一段时间的试验和错误总结出来
    
    </summary>
    
      <category term="小试牛刀" scheme="https://onikiris.github.io/onikiri-blog/categories/%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    
    
      <category term="路漫漫兮" scheme="https://onikiris.github.io/onikiri-blog/tags/%E8%B7%AF%E6%BC%AB%E6%BC%AB%E5%85%AE/"/>
    
  </entry>
  
</feed>
